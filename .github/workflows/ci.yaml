# CI using GitHub actions

name: CI


on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:

  build:
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go 1.22
      uses: actions/setup-go@v2
      with:
        go-version: 1.22.5

    - name: Build
      run: go build -o go-web-app

    - name: Test
      run: go test ./...
  
  code-quality:
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go 1.22
      uses: actions/setup-go@v4
      with:
        go-version: 1.22.5

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
  
  push:
    runs-on: self-hosted

    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

#    - name: Trust self-signed cert for private registry
#      run: |
#        sudo mkdir -p /etc/docker/certs.d/172.25.188.203:5000
#        echo "${{ secrets.REGISTRY_CRT }}" | sudo tee /etc/docker/certs.d/172.25.188.203:5000/ca.crt > /dev/null
#        sudo systemctl restart docker

#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v1

    - name: Trust self-signed cert for private registry
      run: |
        sudo mkdir -p /etc/docker/certs.d/172.25.188.203:5000
        echo "${{ secrets.REGISTRY_CRT }}" | sudo tee /etc/docker/certs.d/172.25.188.203:5000/ca.crt > /dev/null
        sudo update-ca-certificates || true
        sudo systemctl restart docker

#    - name: Create and use host buildx builder
#      run: |
#        docker buildx rm hostbuilder || true
#        docker buildx create --name hostbuilder --driver docker --use
#        docker buildx inspect --bootstrap

    - name: Select or create host buildx builder (sanitized)
      run: |
        set -euo pipefail

        echo "Listing existing buildx builders for debugging:"
        docker buildx ls || true

        # Get the first column (NAME/NODE) from the second line onwards (skip header).
        # Then sanitize: keep only allowed characters [A-Za-z0-9._-], remove trailing '*' etc.
        existing_builder_raw=$(docker buildx ls 2>/dev/null | sed -n '2,$p' | awk '{print $1; exit}' || true)
        echo "Raw builder name found: \"$existing_builder_raw\""

        # sanitize - remove any characters not allowed in builder names (only allow letters, digits, dot, underscore, hyphen)
        existing_builder=$(printf '%s' "$existing_builder_raw" | sed 's/[^A-Za-z0-9._-]//g')

        if [ -n "$existing_builder" ]; then
          echo "Sanitized builder name: \"$existing_builder\""
          # confirm that this builder is a docker-driver builder (check the line that contains the raw name)
          # We search for a line that contains the raw name, and check if 'docker' appears on the same line.
          if docker buildx ls 2>/dev/null | grep -F "$existing_builder_raw" | grep -qi 'docker'; then
            echo "Found docker-driver builder \"$existing_builder\" — using it"
            docker buildx use "$existing_builder"
          else
            echo "Existing builder \"$existing_builder\" is not docker-driver. Creating hostbuilder..."
            docker buildx create --name hostbuilder --driver docker --use
            existing_builder=hostbuilder
          fi
        else
          echo "No valid existing builder name found — creating hostbuilder"
          docker buildx create --name hostbuilder --driver docker --use
          existing_builder=hostbuilder
        fi

        echo "Bootstrapping builder: $existing_builder"
        docker buildx inspect --bootstrap "$existing_builder"



    - name: Login to Private Registry
      uses: docker/login-action@v3
      with:
        registry: 172.25.188.203:5000
        username: ${{ secrets.PRIVATE_REGISTRY_USER }}
        password: ${{ secrets.PRIVATE_REGISTRY_PASS }}

    - name: Build and Push action
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: 172.25.188.203:5000/go-web-app:${{github.run_id}}

  update-newtag-in-helm-chart:
    runs-on: self-hosted

    needs: push

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Update tag in Helm chart
      run: |
        sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/go-web-app-chart/values.yaml

    - name: Commit and push changes
      run: |
        git config --global user.email "gunawardhana.edu@gmail.com"
        git config --global user.name "kavinduChamithG"
        git add helm/go-web-app-chart/values.yaml
        git commit -m "Update tag in Helm chart"
        git push